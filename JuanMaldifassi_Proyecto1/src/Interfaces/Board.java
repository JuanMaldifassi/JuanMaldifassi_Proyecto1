/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaces;

import EDD.Lista;
import Functions.Helpers;
import static Interfaces.Load.diccionarioJuego;
import static Interfaces.Load.tableroJuego;
import Searches.BFS;
import Searches.DFS;
import java.awt.Color;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author juanp
 */
public class Board extends javax.swing.JFrame {

    private Helpers help = new Helpers();
    public static String tipoBusqSelect = "DFS";

    public Board() {
        initComponents();
        this.setVisible(true);
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.initBoard();
        this.initDict();
    }

    private void initBoard() {
        int count = 0;
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                try {
                    // Obtienes el nombre del botón (ej. "jbutton00")
                    String buttonName = "jButton" + i + j;

                    // Buscas el campo en la clase actual (reflexión)
                    java.lang.reflect.Field field = this.getClass().getDeclaredField(buttonName);
                    JButton button = (JButton) field.get(this);

                    String letra = tableroJuego.getVerts()[count].getLetter();
                    button.setText(letra); // Cambias el texto
                    button.setBackground(Color.white);
                    count++;
                } catch (NoSuchFieldException | IllegalAccessException e) {
                    System.err.println("Error al acceder al botón: " + e.getMessage());
                }
            }
        }
    }

    private void initDict() {
        this.diccionario.setText(diccionarioJuego.convertString());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton03 = new javax.swing.JButton();
        jButton02 = new javax.swing.JButton();
        jButton01 = new javax.swing.JButton();
        jButton00 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();
        jButton33 = new javax.swing.JButton();
        searchWord = new javax.swing.JButton();
        word = new javax.swing.JTextField();
        searchAll = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        diccionario = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        deleteWord = new javax.swing.JButton();
        addWord = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        exit = new javax.swing.JButton();
        back = new javax.swing.JButton();
        tipoBusq = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton03.setText("jButton1");
        jPanel1.add(jButton03, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 160, -1, 60));

        jButton02.setText("jButton1");
        jPanel1.add(jButton02, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 160, -1, 60));

        jButton01.setText("jButton1");
        jPanel1.add(jButton01, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 160, -1, 60));

        jButton00.setText("jButton1");
        jPanel1.add(jButton00, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, -1, 60));

        jButton10.setText("jButton1");
        jPanel1.add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 230, -1, 60));

        jButton11.setText("jButton1");
        jPanel1.add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 230, -1, 60));

        jButton12.setText("jButton1");
        jPanel1.add(jButton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 230, -1, 60));

        jButton13.setText("jButton1");
        jPanel1.add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 230, -1, 60));

        jButton20.setText("jButton1");
        jPanel1.add(jButton20, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 300, -1, 60));

        jButton21.setText("jButton1");
        jPanel1.add(jButton21, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 300, -1, 60));

        jButton22.setText("jButton1");
        jPanel1.add(jButton22, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 300, -1, 60));

        jButton23.setText("jButton1");
        jPanel1.add(jButton23, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 300, -1, 60));

        jButton30.setText("jButton1");
        jPanel1.add(jButton30, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 370, -1, 60));

        jButton31.setText("jButton1");
        jPanel1.add(jButton31, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 370, -1, 60));

        jButton32.setText("jButton1");
        jPanel1.add(jButton32, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 370, -1, 60));

        jButton33.setText("jButton1");
        jPanel1.add(jButton33, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 370, -1, 60));

        searchWord.setText("Buscar");
        searchWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchWordActionPerformed(evt);
            }
        });
        jPanel1.add(searchWord, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 80, -1, -1));
        jPanel1.add(word, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, 260, -1));

        searchAll.setText("Buscar Todas las Palabras en el Diccionario");
        jPanel1.add(searchAll, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, 340, -1));

        diccionario.setColumns(20);
        diccionario.setRows(5);
        jScrollPane1.setViewportView(diccionario);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 160, 210, 270));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("Diccionario:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 130, -1, -1));

        deleteWord.setText("Eliminar Palabra");
        deleteWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteWordActionPerformed(evt);
            }
        });
        jPanel1.add(deleteWord, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 190, -1, -1));

        addWord.setText("Agregar Palabra");
        addWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addWordActionPerformed(evt);
            }
        });
        jPanel1.add(addWord, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 160, -1, -1));

        jLabel2.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel2.setText("SOPA DE LETRAS");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 20, -1, -1));

        exit.setText("X");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        jPanel1.add(exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 0, 60, 50));

        back.setText("<-");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        jPanel1.add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 60, 50));

        tipoBusq.setText("Sleccionar tipo de Busqueda");
        tipoBusq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoBusqActionPerformed(evt);
            }
        });
        jPanel1.add(tipoBusq, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 80, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 790, 460));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        Load load = new Load();
        this.dispose();
    }//GEN-LAST:event_backActionPerformed

    private void addWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addWordActionPerformed
        String input = JOptionPane.showInputDialog(null, "Ingrese una Palabra:", "Nueva Palabra", JOptionPane.PLAIN_MESSAGE);

        // Verificar si el usuario hizo clic en "Cancelar" o cerró el diálogo
        if (input != null) {
            if (help.validarPalabra(input) != null) {
                diccionarioJuego.insertFinal(input.toUpperCase());
                JOptionPane.showMessageDialog(null, "Se ha agregado correctamente la palabra " + input.toUpperCase() + " en el diccionario.");
                this.diccionario.setText(diccionarioJuego.convertString());
            } else {
                JOptionPane.showMessageDialog(null, "La palabra " + input.toUpperCase() + " no se pudo agregar en el diccionario porque no contiene solo letras");
                JOptionPane.showMessageDialog(null, "Ingresa una palabra que solo contenga letras.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "No ingresaste nada o cancelaste.", "Alerta!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_addWordActionPerformed

    private void deleteWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteWordActionPerformed
        String input = JOptionPane.showInputDialog(null, "Ingrese la palabra que desea eliminar:", "Eliminar Palabra", JOptionPane.PLAIN_MESSAGE);

        // Verificar si el usuario hizo clic en "Cancelar" o cerró el diálogo
        if (input != null) {
            if (help.validarPalabra(input) != null) {
                boolean delete = false;
                for (int i = 0; i < diccionarioJuego.getSize(); i++) {
                    String palabra = (String) diccionarioJuego.getValue(i);
                    if (input.equalsIgnoreCase(palabra)) {
                        diccionarioJuego.deleteForPosition(i);
                        delete = true;
                    }
                }

                if (delete) {
                    JOptionPane.showMessageDialog(null, "Se ha eliminado correctamente la palabra " + input.toUpperCase());
                    this.diccionario.setText(diccionarioJuego.convertString());
                } else {
                    JOptionPane.showMessageDialog(null, "La palabra no esta dentro del diccionario");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Ingresa una palabra que solo contenga letras.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "No ingresaste nada o cancelaste.", "Alerta!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_deleteWordActionPerformed

    private void searchWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchWordActionPerformed
        if (word.getText().isEmpty() || word.getText().isBlank()) {
            JOptionPane.showMessageDialog(null, "No se ingreso ninguna palabra en la barra de busqueda.");
        } else {
            switch (tipoBusqSelect) {
                case "DFS":
                    DFS dfs = new DFS(tableroJuego);
                    String palabraABuscar = this.word.getText();
                    boolean encontrada = dfs.buscarPalabra(palabraABuscar);

                    if (encontrada) {
                        JOptionPane.showMessageDialog(null, "La palabra '" + palabraABuscar + "' fue encontrada en el tablero.");
                        Lista coordenadas = dfs.obtenerCoordenadasPalabra();
                        this.initBoard();

                        for (int i = 0; i < coordenadas.getSize(); i++) {
                            String cordenadaActual = (String) coordenadas.getValue(i);
                            //System.out.println(cordenadaActual);

                            String[] coordenadasStr = cordenadaActual.split(",");
                            String coordXStr = coordenadasStr[0].substring(1);
                            String coordYStr = coordenadasStr[1].replace(")", "");

                            int x = Integer.parseInt(coordXStr);
                            int y = Integer.parseInt(coordYStr);

                            try {
                                String buttonName = "jButton" + x + y;

                                // Buscas el campo en la clase actual (reflexión)
                                java.lang.reflect.Field field = this.getClass().getDeclaredField(buttonName);
                                JButton button = (JButton) field.get(this);
                                button.setBackground(Color.yellow);

                            } catch (NoSuchFieldException | IllegalAccessException e) {
                                System.err.println("Error al acceder al botón: " + e.getMessage());
                            }

                            System.setProperty("org.graphstream.ui", "swing");
                            VisualizadorArbol verArbol = new VisualizadorArbol(tableroJuego, dfs.getVisited());
                            verArbol.setVisible(true);

                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "La palabra '" + palabraABuscar + "' NO fue encontrada en el tablero.");
                    }
                    break;
                case "BFS":
                    BFS bfs = new BFS(tableroJuego);
                    String palabraBuscar = this.word.getText();
                    boolean encontrada2 = bfs.buscarPalabra(palabraBuscar);

                    if (encontrada2) {
                        JOptionPane.showMessageDialog(null, "La palabra '" + palabraBuscar + "' fue encontrada en el tablero.");
                        Lista coordenadas = bfs.obtenerCoordenadasPalabra();
                        System.out.println(coordenadas.convertString());
                        this.initBoard();

                        for (int i = 0; i < coordenadas.getSize(); i++) {
                            String cordenadaActual = (String) coordenadas.getValue(i);
                            //System.out.println(cordenadaActual);

                            String[] coordenadasStr = cordenadaActual.split(",");
                            String coordXStr = coordenadasStr[0].substring(1);
                            String coordYStr = coordenadasStr[1].replace(")", "");

                            int x = Integer.parseInt(coordXStr);
                            int y = Integer.parseInt(coordYStr);

                            try {
                                String buttonName = "jButton" + x + y;

                                // Buscas el campo en la clase actual (reflexión)
                                java.lang.reflect.Field field = this.getClass().getDeclaredField(buttonName);
                                JButton button = (JButton) field.get(this);
                                button.setBackground(Color.yellow);

                            } catch (NoSuchFieldException | IllegalAccessException e) {
                                System.err.println("Error al acceder al botón: " + e.getMessage());
                            }

                        }
                        //System.out.println("Coordenadas: " + coordenadas.convertString());
                    } else {
                        JOptionPane.showMessageDialog(null, "La palabra '" + palabraBuscar + "' NO fue encontrada en el tablero.");
                    }

                    break;
                default:
                    JOptionPane.showMessageDialog(null, "No se selecciono ningun tipo de busqueda.");
                    break;
            }

        }
    }//GEN-LAST:event_searchWordActionPerformed

    private void tipoBusqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoBusqActionPerformed
        SearchType seacrhType = new SearchType();
        this.dispose();
    }//GEN-LAST:event_tipoBusqActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Board.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Board.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Board.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Board.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Board().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addWord;
    private javax.swing.JButton back;
    private javax.swing.JButton deleteWord;
    private javax.swing.JTextArea diccionario;
    private javax.swing.JButton exit;
    private javax.swing.JButton jButton00;
    private javax.swing.JButton jButton01;
    private javax.swing.JButton jButton02;
    private javax.swing.JButton jButton03;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton searchAll;
    private javax.swing.JButton searchWord;
    private javax.swing.JButton tipoBusq;
    private javax.swing.JTextField word;
    // End of variables declaration//GEN-END:variables
}
